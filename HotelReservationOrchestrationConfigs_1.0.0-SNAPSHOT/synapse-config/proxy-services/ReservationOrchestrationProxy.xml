<?xml version="1.0" encoding="UTF-8"?>
<proxy name="ReservationOrchestrationProxy" startOnLoad="true" transports="http https" xmlns="http://ws.apache.org/ns/synapse">
    <target>
        <inSequence>
            <sequence key="Sequence"/>
            <property expression="get-property('uri.var.id')" name="reservationId" scope="default" type="STRING"/>
            <call>
                <endpoint>
                    <http method="get" uri-template="http://localhost:3000/reservations/{uri.var.reservationId}">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <log level="full"/>
            <property expression="json-eval($)" name="reservationData" scope="default" type="STRING"/>
            <property expression="json-eval($.customerId)" name="customerId" scope="default" type="STRING"/>
            <call>
                <endpoint>
                    <http method="get" uri-template="http://localhost:3000/customers/{uri.var.customerId}">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <log level="full"/>
            <property expression="json-eval($)" name="customerData" scope="default" type="STRING"/>
            <property expression="json-eval($.hotelId)" name="hotelId" scope="default" type="STRING"/>
            <call>
                <endpoint>
                    <http method="get" uri-template="http://localhost:3000/hotels/{uri.var.hotelId}">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <log level="full"/>
            <property expression="json-eval($)" name="hotelData" scope="default" type="STRING"/>
            <payloadFactory media-type="json">
                <format>{&#xd;
  "reservationId": $1,&#xd;
  "checkInDate": "$2",&#xd;
  "checkOutDate": "$3",&#xd;
  "customerId": $4,&#xd;
  "customerName": "$5",&#xd;
  "customerEmail": "$6",&#xd;
  "customerPhone": "$7",&#xd;
  "hotelId": $8,&#xd;
  "hotelName": "$9",&#xd;
  "hotelLocation": "$10",&#xd;
  "hotelCapacity": $11&#xd;
}&#xd;
</format>
                <args>
                    <arg evaluator="json" expression="$.reservationData.id"/>
                    <arg evaluator="json" expression="$.reservationData.checkInDate"/>
                    <arg evaluator="json" expression="$.reservationData.checkOutDate"/>
                    <arg evaluator="json" expression="$.customerData.id"/>
                    <arg evaluator="json" expression="$.customerData.name"/>
                    <arg evaluator="json" expression="$.customerData.email"/>
                    <arg evaluator="json" expression="$.customerData.phone"/>
                    <arg evaluator="json" expression="$.hotelData.id"/>
                    <arg evaluator="json" expression="$.hotelData.name"/>
                    <arg evaluator="json" expression="$.hotelData.location"/>
                    <arg evaluator="json" expression="$.hotelData.capacity"/>
                </args>
            </payloadFactory>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </target>
</proxy>
